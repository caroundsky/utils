/**
 * Fork from https://github.com/ElemeFE/element/blob/dev/build/bin/build-entry.js
 */
const path = require("path")
const endOfLine = require("os").EOL
const fs = require("fs")
const template = require("lodash/template")
const camelCase = require("lodash/camelCase")
const lowerFirst = require("lodash/lowerFirst")
const upperCamelCase = (str) => lowerFirst(camelCase(str))
const { components } = require("./config")

module.exports = function () {
  const MAIN_TEMPLATE = `/* Automatically generated by './build/gen-entry.js' */
  
<%= importText %>

const components = {
<%= exportText %>
}

export {
<%= exportText %>
}

export default components
`
  const COMP_TEMPLATE = `import <%= name %> from './packages/<%= pkgName %>'`

  const compTplCompiled = template(COMP_TEMPLATE)

  const allImportComponents = []
  const allInstallComponents = []

  Object.keys(components).map((pkgName) => {
    const compName = upperCamelCase(pkgName)
    allImportComponents.push(
      compTplCompiled({
        name: compName,
        pkgName,
      })
    )
    allInstallComponents.push(`  ${compName}`)
  })

  const mainTplCompiled = template(MAIN_TEMPLATE)
  const entryFileText = mainTplCompiled({
    importText: allImportComponents.join(endOfLine),
    exportText: allInstallComponents.join("," + endOfLine),
  })

  const OUTPUT_PATH = path.join(__dirname, "../src/index.ts")
  fs.writeFileSync(OUTPUT_PATH, entryFileText)

  return {
    outputPath: OUTPUT_PATH,
    entryFileText,
  }
}
